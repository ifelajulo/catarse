{"name":"vesthub","tagline":"The first open source crowdfunding platform for creative projects in the world","body":"# Catarse [![Build Status](https://secure.travis-ci.org/catarse/catarse.png?branch=master)](https://travis-ci.org/catarse/catarse) [![Coverage Status](https://coveralls.io/repos/catarse/catarse/badge.png?branch=channels)](https://coveralls.io/r/catarse/catarse) [![Dependency Status](https://gemnasium.com/catarse/catarse.png)](https://gemnasium.com/catarse/catarse) [![Code Climate](https://codeclimate.com/github/catarse/catarse.png)](https://codeclimate.com/github/catarse/catarse)\r\n\r\nThe first crowdfunding platform from Brazil\r\n\r\n## An open source crowdfunding platform for creative projects\r\n\r\nWelcome to Catarse's source code repository.\r\nOur goal with opening the source code is to stimulate the creation of a community of developers around a high-quality crowdfunding platform.\r\n\r\nYou can see the software in action in http://catarse.me.\r\nThe official repo is https://github.com/catarse/catarse\r\n\r\n## Getting started\r\n\r\n### Dependencies\r\n\r\nTo run this project you need to have:\r\n\r\n* Ruby 2.1.2\r\n* [PostgreSQL](http://www.postgresql.org/)\r\n  * OSX - [Postgress.app](http://postgresapp.com/)\r\n  * Linux - `$ sudo apt-get install postgresql`\r\n  * Windows - [PostgreSQL for Windows](http://www.postgresql.org/download/windows/)\r\n\r\n  **IMPORTANT**: Make sure you have postgresql-contrib ([Aditional Modules](http://www.postgresql.org/docs/9.3/static/contrib.html)) installed on your system.\r\n\r\n### Setup the project\r\n\r\n* Clone the project\r\n\r\n        $ git clone https://github.com/catarse/catarse.git\r\n\r\n* Enter project folder\r\n\r\n        $ cd catarse\r\n\r\n* Create the `database.yml`\r\n\r\n        $ cp config/database.sample.yml config/database.yml\r\n\r\n    Add your datbase credentials\r\n\r\n* Install the gems\r\n\r\n        $ bundle install\r\n\r\n* Create the database\r\n\r\n        $ rake db:create db:migrate db:seed\r\n\r\nIf everything goes OK, you can now run the project!\r\n\r\n### Running the project\r\n\r\n```bash\r\n$ rails server\r\n```\r\n\r\nOpen [http://localhost:3000](http://localhost:3000)\r\n\r\n### Translations\r\n\r\nWe hope to support a lot of languages in the future.\r\nSo we are willing to accept pull requests with translations to other languages.\r\n\r\nThanks a lot to Daniel Walmsley, from http://purpose.com, for starting the internationalization and beginning the english translation.\r\n\r\n## Payment gateways\r\n\r\nCurrently, we support MoIP, PayPal and WePay through our payment engines. Payment engines are extensions to Catarse that implement a specific payment gateway logic.\r\nThe current working engines are:\r\n* MoIP\r\n* PayPal\r\n* WePay\r\n\r\nIf you have created a different payment engine to Catarse please contact us so we can link your engine here.\r\nIf you want to create a payment engine please join our mailing list at http://groups.google.com/group/catarse-dev\r\n\r\n## How to contribute with code\r\n\r\nBefore contributing, take a look at our Roadmap (https://www.pivotaltracker.com/projects/427075) and discuss your plans in our mailing list (http://groups.google.com/group/catarse-dev).\r\n\r\nOur pivotal is concerned with user visible features using user stories. But we do have some features not visible to users that are planned such as:\r\n* Turn Catarse into a Rails Engine with customizable views.\r\n* Make a installer script to guide users through initial Catarse configuration.\r\n\r\nAfter that, just fork the project, change what you want, and send us a pull request.\r\n\r\n### Best practices (or how to get your pull request accepted faster)\r\n\r\n* Follow this style guide: https://github.com/bbatsov/ruby-style-guide\r\n* Create one acceptance tests for each scenario of the feature you are trying to implement.\r\n* Create model and controller tests to keep 100% of code coverage at least in the new parts that you are writing.\r\n* Feel free to add specs to the code that is already in the repository without the proper coverage ;)\r\n* Regard the existing tests for a style guide, we try to use implicit spec subjects and lazy evaluation as often as we can.\r\n\r\n## Credits\r\n\r\nAuthor: Daniel Weinmann\r\n\r\nContributors: You know who you are ;) The commit history can help, but the list was getting bigger and pointless to keep in the README.\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2011 Softa\r\n\r\nLicensed under the MIT license (see MIT-LICENSE file)\r\n","google":"UA-60063725-1","note":"Don't delete this file! It's used internally to help with page regeneration."}